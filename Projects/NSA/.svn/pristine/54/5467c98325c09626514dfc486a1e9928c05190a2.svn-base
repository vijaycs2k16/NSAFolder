/**
 * Created by Cyril on 2/22/2017.
 */
import {Component, ElementRef, OnInit, ViewChild} from "@angular/core";
import {BaseService} from "../../../../services/index";
import {Constants, ServiceUrls} from "../../../../common/index";
import {CommonService} from "../../../../services/common/common.service";

@Component({
    templateUrl: 'fee-defaulters.html'
})
export class FeeDefaultersComponent implements OnInit {

    @ViewChild('singleClass') singleClass:ElementRef
    @ViewChild('singleFee') singleFee:ElementRef
    @ViewChild('singleSection') singleSection:ElementRef
    @ViewChild('date') date:ElementRef

    sections: any;
    classId: any;
    classes: any;
    startDate: any;
    endDate: any;
    sectionId: any;
    dates: any;
    className: any;
    sectionName: any;
    feeNames: any;
    feestruid : any;
    constId:'00000000-0000-0000-0000-000000000000';

    constructor(private baseService: BaseService,
                private commonService: CommonService,
                private serviceUrls: ServiceUrls,
                private constants: Constants) {
    }

    ngOnInit() {
        this.baseService.setTitle('NSA - datatable-fee-defaulters');
        this.baseService.enableAppJs();
        this.startDate = new Date();
        this.endDate = new Date();
        this.baseService.enablePickerDate();
        this.baseService.dataTableDestroy('datatable-datatable-fee-defaulters');
        var constId = '00000000-0000-0000-0000-000000000000';\
        var url = this.serviceUrls.getFeeDefaulters + '/'+ constId ;
        this.baseService.enableDataTable(url);
        this.getALlClasses();
        this.getFeeNames();
    }
    getALlClasses() {
        this.commonService.get(this.serviceUrls.getEmpActiveClasses).then(
            classes => this.callBackClasses(classes)
        )
    }

    callBackClasses(data: any) {
        this.classes = data;
        this.baseService.enableSelectWithEmpty('#bootstrap-class', data, this.constants.classObj, null);
    }

    getSectionByClass() {
        this.classId = this.baseService.extractOptions(this.singleClass.nativeElement.selectedOptions)[0].id;
        if (this.classId == undefined || this.classId == "") {
            this.baseService.addHideClass('#sections');
        } else {
            this.classId = this.baseService.extractOptions(this.singleClass.nativeElement.selectedOptions)[0].id;
            this.baseService.removeHideClass('#sections');
            this.commonService.get(this.serviceUrls.getEmpSectionsByClass + this.classId).then(
                sections => this.callBackSections(sections)
            )
        }
    }

    callBackSections(data: any) {
        this.sections = data;
        this.baseService.enableSelectWithEmpty('#bootstrap-section', data, this.constants.sectionObj, null)
    }

    getFeeNamesDetails(){
        this.feestruid =this.baseService.extractOptions(this.singleFee.nativeElement.selectedOptions)[0].id;
    }


    getFeeNames() {
        this.commonService.get(this.serviceUrls.getFeeStructures).then(
            Names => this.callBackFeeNames(Names)
        )
    }

    callBackFeeNames(data: any) {
        //this.feeNames = data;
        this.baseService.enableSelectWithEmpty('#bootstrap-fee', data, this.constants.feeStructureObj, null);
    }

    getFeeDetailsData() {
        this.classId = this.baseService.extractOptions(this.singleClass.nativeElement.selectedOptions)[0].id;
        this.className = this.baseService.extractOptions(this.singleClass.nativeElement.selectedOptions)[0].name;
        if (this.classId == undefined || this.classId == "") {
            this.baseService.showNotification("Select Class", "", 'bg-danger');
        } else {
            this.sectionId = this.baseService.extractOptions(this.singleSection.nativeElement.selectedOptions)[0].id;
            this.sectionName = this.baseService.extractOptions(this.singleSection.nativeElement.selectedOptions)[0].name;
            //this.feestruid = this.baseService.extractOptions(this.singleFee.nativeElement.selectedOptions)[0].id;
            this.baseService.destroyDatatable('.datatable-fee-defaulters');

            var url = this.serviceUrls.getFeeDefaulters + '/'+ this.feestruid+ '?classId=' + this.classId + '&sectionId=' + this.sectionId ;
            //this.baseService.enableDataTable(url);
            this.baseService.enableDataTable(url);
            //this.baseService.enableDataTable(url);
            //this.commonService.get(url).then(
            //    result => this.callBackFeeStructure(result)
            //)
        }
    }

    callBackFeeStructure(result: any){
        this.baseService.enableDataTable(result);
    }

    resetForm() {
        this.baseService.addHideClass('#sections');
        this.getALlClasses();
        this.baseService.dataTableDestroy('datatable-datatable-fee-defaulters');
        var constId = '00000000-0000-0000-0000-000000000000';

    }

}
